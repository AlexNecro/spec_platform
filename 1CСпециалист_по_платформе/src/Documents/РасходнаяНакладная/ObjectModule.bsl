Процедура ОбработкаПроведения(Отказ, Режим)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка.Склад КАК Склад,
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяСписокНоменклатуры.Количество КАК Количество,
	|	РасходнаяНакладнаяСписокНоменклатуры.Сумма КАК Сумма,
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка КАК Партия,
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ втТЧ
	|ИЗ
	|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
	|ГДЕ
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|;
	|
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧ.Склад,
	|	втТЧ.Номенклатура,
	|	СУММА(втТЧ.Количество) КАК Количество,
	|	СУММА(втТЧ.Сумма) КАК Сумма
	|ИЗ
	|	втТЧ КАК втТЧ
	|ГДЕ
	|	втТЧ.ВидНоменклатуры = &Товар
	|СГРУППИРОВАТЬ ПО
	|	втТЧ.Склад,
	|	втТЧ.Номенклатура
	|;
	|
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧ.Склад,
	|	втТЧ.Номенклатура,
	|	втТЧ.Количество,
	|	втТЧ.Сумма,
	|	втТЧ.Партия,
	|	втТЧ.ВидНоменклатуры
	|ИЗ
	|	втТЧ КАК втТЧ";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Товар", Перечисления.ВидыНоменклатуры.Товар);

	МассивРезультатов = Запрос.ВыполнитьПакет();

	Если МассивРезультатов[1].Пустой() Тогда
		Возврат;
	КонецЕсли;
	;

	Выборка = МассивРезультатов[1].Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;
	КонецЦикла;

	Движения.ОстаткиНоменклатуры.БлокироватьДляИзменения = Истина;
	Движения.ОстаткиНоменклатуры.Записать(Истина);

	ПроверитьОстатки(Запрос, Отказ);

	Если Не Отказ Тогда
		ПровестиПоПартиям(Запрос, МассивРезультатов[1], Отказ);
	КонецЕсли;

	Если Не Отказ Тогда
		ПровестиПоУправленческому(Запрос, МассивРезультатов[1], Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПровестиПоУправленческому(Запрос, ДанныеДляБлокировки, Отказ)
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();

	Блокировка = Новый БлокировкаДанных;
	Элемент = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	Элемент.ИсточникДанных = ДанныеДляБлокировки;
	Элемент.Режим = РежимБлокировкиДанных.Исключительный;
	Элемент.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	Элемент.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	Блокировка.Заблокировать();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	втТЧ.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(втТЧ.Номенклатура) КАК НоменклатураПредставление,
	|	втТЧ.Количество КАК КоличествоВДокументе,
	|	УправленческийОстатки.СуммаОстаток КАК СуммаОстаток,
	|	УправленческийОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	УправленческийОстатки.Субконто2 КАК СрокГодности
	|ИЗ
	|	втТЧ КАК втТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(&МоментВремени, Счет = &СчетТовары,
	|			&СубконтоНоменклатураИСрокГодности, Субконто1 В
	|			(ВЫБРАТЬ
	|				Номенклатура КАК Номенклатура
	|			ИЗ
	|				втТЧ КАК втТЧ)) КАК УправленческийОстатки
	|		ПО втТЧ.Номенклатура = УправленческийОстатки.Субконто1
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе) КАК КоличествоВДокументе,
	|	СУММА(СуммаОстаток),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	СубконтоНоменклатураИСрокГодности = Новый Массив;
	СубконтоНоменклатураИСрокГодности.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	СубконтоНоменклатураИСрокГодности.Добавить(ПланыВидовХарактеристик.ВидыСубконто.СрокГодности);

	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("СчетТовары", ПланыСчетов.Управленческий.Товары);
	Запрос.УстановитьПараметр("СубконтоНоменклатураИСрокГодности", СубконтоНоменклатураИСрокГодности);

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	ВыборкаПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаПоНоменклатуре.Следующий() Цикл

		Если ВыборкаПоНоменклатуре.КоличествоВДокументе > ВыборкаПоНоменклатуре.КоличествоОстаток Тогда
			СообщитьПользователю("В регистре управленческий недостаточно " + ВыборкаПоНоменклатуре.НоменклатураПредставление + ", нужно еще "
				+ (ВыборкаПоНоменклатуре.КоличествоВДокументе - ВыборкаПоНоменклатуре.КоличествоОстаток));
			Отказ = Истина;
			Возврат;
		КонецЕсли;

		ВыборкаПоСрокам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НадоСписать = ВыборкаПоНоменклатуре.КоличествоВДокументе;
		СебестоимостьЕдиницы = ВыборкаПоНоменклатуре.СуммаОстаток / ВыборкаПоНоменклатуре.КоличествоОстаток;
		ОстатокПоНоменклатуре  =  ВыборкаПоНоменклатуре.КоличествоОстаток;

		Пока ВыборкаПоСрокам.Следующий() Цикл

			КоличествоКСписанию = Мин(ВыборкаПоСрокам.КоличествоОстаток, НадоСписать);
			
			Если КоличествоКСписанию = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если КоличествоКСписанию = ОстатокПоНоменклатуре Тогда
				СуммаКСписанию = ВыборкаПоНоменклатуре.СуммаОстаток;
			Иначе
				СуммаКСписанию = КоличествоКСписанию * СебестоимостьЕдиницы;
			КонецЕсли;

			Движение = Движения.Управленческий.Добавить();
			Движение.Период = Дата;
			Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.СчетКт = ПланыСчетов.Управленческий.Товары;;
			Движение.Сумма = СуммаКСписанию;
			Движение.КоличествоКт = КоличествоКСписанию;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаПоСрокам.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СрокГодности] = ВыборкаПоСрокам.СрокГодности;

			НадоСписать = НадоСписать - КоличествоКСписанию;
			ОстатокПоНоменклатуре = ОстатокПоНоменклатуре - КоличествоКСписанию;
		КонецЦикла;
	КонецЦикла;
	
	Движение = Движения.Управленческий.Добавить();
	Движение.Период = Дата;
	Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
	Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
	Движение.Сумма = СуммаПоДокументу;

КонецПроцедуры

Процедура ПровестиПоПартиям(Запрос, ДанныеДляБлокировки, Отказ)

	ПорядокСписанияПартий = УчетнаяПолитика.ПорядокСписанияПартий(Дата);

	Если Не ЗначениеЗаполнено(ПорядокСписанияПартий) Тогда
		СообщитьПользователю("Не заполнен порядок списания партий");
		Отказ = Истина;
	КонецЕсли;

	Движения.ПартииНоменклатуры.Записывать = Истина;
	Движения.ПартииНоменклатуры.Записать();

	Блокировка = Новый БлокировкаДанных;
	Элемент = Блокировка.Добавить("РегистрНакопления.ПартииНоменклатуры");
	Элемент.ИсточникДанных = ДанныеДляБлокировки;
	Элемент.Режим = РежимБлокировкиДанных.Исключительный;
	Элемент.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ISNULL(ПартииНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ISNULL(ПартииНоменклатурыОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ПартииНоменклатурыОстатки.Партия КАК Партия,
	|	втТЧ.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(втТЧ.Номенклатура) КАК НоменклатураПредставление,
	|	втТЧ.Количество КАК КоличествоВДокументе
	|ИЗ
	|	втТЧ КАК втТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииНоменклатуры.Остатки(&МоментВремени, Номенклатура В
	|			(ВЫБРАТЬ
	|				Номенклатура КАК Номенклатура
	|			ИЗ
	|				втТЧ)) КАК ПартииНоменклатурыОстатки
	|		ПО втТЧ.Номенклатура = ПартииНоменклатурыОстатки.Номенклатура
	|УПОРЯДОЧИТЬ ПО
	|	ПартииНоменклатурыОстатки.Партия.МоментВремени УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе) КАК КоличествоВДокументе,
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";

	Если ПорядокСписанияПартий = Перечисления.УчетнаяПолитика.ФИФО Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УБЫВ", "");
	КонецЕсли;

	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	ВыборкаПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаПоНоменклатуре.Следующий() Цикл

		Если ВыборкаПоНоменклатуре.КоличествоВДокументе > ВыборкаПоНоменклатуре.КоличествоОстаток Тогда
			СообщитьПользователю("В регистре партий недостаточно " + ВыборкаПоНоменклатуре.НоменклатураПредставление + ", нужно еще "
				+ (ВыборкаПоНоменклатуре.КоличествоВДокументе - ВыборкаПоНоменклатуре.КоличествоОстаток));
			Отказ = Истина;
			Возврат;
		КонецЕсли;

		ВыборкаПоПартиям = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НадоСписать = ВыборкаПоНоменклатуре.КоличествоВДокументе;

		Пока ВыборкаПоПартиям.Следующий() Цикл

			КоличествоКСписанию = Мин(ВыборкаПоПартиям.КоличествоОстаток, НадоСписать);
			Если КоличествоКСписанию = ВыборкаПоПартиям.КоличествоОстаток Тогда
				СуммаКСписанию = ВыборкаПоПартиям.СуммаОстаток;
			Иначе
				СуммаКСписанию = КоличествоКСписанию * ВыборкаПоПартиям.СуммаОстаток
					/ ВыборкаПоПартиям.КоличествоОстаток;
			КонецЕсли;

			Движение = Движения.ПартииНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаПоПартиям.Номенклатура;
			Движение.Партия = ВыборкаПоПартиям.Партия;
			Движение.Количество = КоличествоКСписанию;
			Движение.Сумма = СуммаКСписанию;

			НадоСписать = НадоСписать - КоличествоКСписанию;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура ПроверитьОстатки(Запрос, Отказ)

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Представление КАК НоменклатураПредставление
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Граница, Склад = &Склад
	|	И Номенклатура В
	|		(ВЫБРАТЬ
	|			Номенклатура КАК Номенклатура
	|		ИЗ
	|			втТЧ КАК втТЧ)) КАК ОстаткиНоменклатурыОстатки
	|ГДЕ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0
	|	И ОстаткиНоменклатурыОстатки.Номенклатура.ВидНоменклатуры <> &ВидНоменклатуры";

	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Номенклатура", СписокНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ВидНоменклатуры", Перечисления.ВидыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени()));

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		СообщитьПользователю("В регистре остатков недостаточно " + Выборка.НоменклатураПредставление + ", нужно еще "
			+ (-Выборка.КоличествоОстаток));
		Отказ = Истина;
		Возврат;
	КонецЦикла;

КонецПроцедуры